Name: Anmol Garg
Seneca Id: 149916199
Seneca email: agarg15@myseneca.ca

-> In this workshop, I have learnt about the concept of class templates, inheritance with templates and their use in order to produce efficient code that can work in many scenarios. The reason behind specializing the operator+=() member function is to make sure that the code works fine in both cases where we can add integers and another case where we add strings as integers need to be added in the arithmetic way but the strings need to be concatenated. We do not need to specialize the initial value during summation because we have already done that during the initialization, and we do not need to do it again. The class variables were defined outside the class in order to make sure that because static objects need to be defined once and a class can be included multiple times in many translation units. We did not split the modules into separate .h and .cpp files because we used templates in this workshop and templates are not functions, the compilation of templates cannot be done separately so they need to be stored in the header file. In the PairSummable(const K& key, const V& value = initial) constructor, =initial means that if the value is not provided as an argument then by default the value will be the initial value(static member variable ‘initial’ of the class).